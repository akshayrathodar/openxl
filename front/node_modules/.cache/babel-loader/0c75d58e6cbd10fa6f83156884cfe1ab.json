{"ast":null,"code":"var _jsxFileName = \"/home/dell/Videos/Node_Backend/front/src/Modules/Todo.js\";\nimport React from 'react';\nimport { Buttons } from '../Elements/Button';\nimport { Textboxinput } from '../Elements/Textboxinput';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // import Alert from '@material-ui/lab/Alert';\n\nimport { withStyles } from '@material-ui/styles';\nimport TabPanel from '../Elements/Tabpanel';\nimport Container from '@material-ui/core/Container';\nimport { Cards } from '../Elements/Cards';\nimport { connect } from \"react-redux\";\nimport { addtodoList, todoList } from '../actions/index';\nimport { getProduct } from '../Apis/callApis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paper: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: 10\n  },\n  custform: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    margin: 10\n  }\n});\n\nclass Todos extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanges = evt => {\n      let text = evt.target.value;\n      this.setState({\n        temptxt: text\n      });\n    };\n\n    this.onBtnClick = () => {\n      if (this.state.temptxt !== '') {\n        let randomnum = Math.random();\n        let todotxt = this.state.temptxt;\n        let list = [...this.state.lists];\n        list.push({\n          'id': randomnum,\n          'todo': todotxt,\n          'checked': true\n        });\n        this.props.addtodoList({\n          'todo': todotxt,\n          'checked': true\n        });\n        this.setState({\n          lists: list,\n          temptxt: ''\n        });\n      } else {\n        alert('please enter todo text');\n      }\n    };\n\n    this.onCheckedChange = evt => {\n      let array = [...this.state.lists];\n      let index = array.findIndex(obj => obj.id === evt);\n      array[index].checked = !array[index].checked;\n      this.setState({\n        lists: array\n      });\n    };\n\n    this.tabChange = (event, newValue) => {\n      this.setState({\n        tabvalue: newValue\n      });\n    };\n\n    this.state = {\n      lists: [],\n      temptxt: '',\n      tabvalue: 0\n    };\n  }\n\n  componentDidMount() {\n    getProduct().then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Todo Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"loream ipsum loream ipsum loream ipsum loream ipsum loream ipsum \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Textboxinput, {\n                label: \"Add Todos\",\n                value: this.state.temptxt,\n                onChangeEvent: this.onTextChanges\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Buttons, {\n                color: \"primary\",\n                title: \"Add\",\n                clickEvent: this.onBtnClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Cards, {\n                list: this.state.lists,\n                checkboxEvt: this.onCheckedChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addtodoList: stat => dispatch(addtodoList(stat))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Todos));","map":{"version":3,"sources":["/home/dell/Videos/Node_Backend/front/src/Modules/Todo.js"],"names":["React","Buttons","Textboxinput","Grid","Typography","withStyles","TabPanel","Container","Cards","connect","addtodoList","todoList","getProduct","styles","theme","paper","marginTop","display","flexDirection","alignItems","form","width","custform","margin","Todos","Component","constructor","props","onTextChanges","evt","text","target","value","setState","temptxt","onBtnClick","state","randomnum","Math","random","todotxt","list","lists","push","alert","onCheckedChange","array","index","findIndex","obj","id","checked","tabChange","event","newValue","tabvalue","componentDidMount","then","res","console","log","catch","err","render","classes","mapStateToProps","todos","mapDispatchToProps","dispatch","stat"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {Buttons} from '../Elements/Button';\nimport {Textboxinput} from '../Elements/Textboxinput';\n\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n// import Alert from '@material-ui/lab/Alert';\n\nimport { withStyles } from '@material-ui/styles';\nimport TabPanel from '../Elements/Tabpanel';\nimport Container from '@material-ui/core/Container';\n\n\nimport { Cards } from '../Elements/Cards';\n\nimport { connect } from \"react-redux\";\nimport { addtodoList , todoList } from '../actions/index';\n\nimport { getProduct } from '../Apis/callApis';\n\nconst styles = (theme) => ({\n  paper: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n \n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: 10,\n  },\n  custform:{\n      display:'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      margin:10\n  },\n  \n});\n\nclass Todos extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      lists : [],\n      temptxt:'',\n      tabvalue:0\n    };\n  }\n\n\n  componentDidMount() {\n    getProduct().then((res) => {\n        console.log(res);\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n\n  onTextChanges = (evt) => {\n      let text = evt.target.value;\n      this.setState({temptxt:text});\n  }\n\n  onBtnClick = () => {\n    \n    if(this.state.temptxt !== '') {\n      let randomnum = Math.random();\n      let todotxt = this.state.temptxt;\n      let list = [...this.state.lists];\n      list.push({'id':randomnum,'todo':todotxt,'checked':true});\n      this.props.addtodoList({'todo':todotxt,'checked':true});\n      this.setState({lists:list,temptxt:''});\n    } else {\n      alert('please enter todo text');\n    }\n  }\n\n  onCheckedChange = (evt) => {\n    let array = [...this.state.lists];\n    let index = array.findIndex(obj => obj.id === evt);\n    array[index].checked = !array[index].checked;\n    this.setState({lists:array});\n\n  }\n\n  tabChange = (event, newValue) => {\n    this.setState({tabvalue:newValue});\n  }\n\n  \n\n  render()\n  {\n    const { classes } = this.props;\n    \n    return (\n      <>\n      <Typography variant=\"h5\">Todo Demo</Typography>\n            <Typography>loream ipsum loream ipsum loream ipsum loream ipsum loream ipsum </Typography>\n        <Container component=\"main\" maxWidth=\"xs\">\n          \n          <div className={classes.paper}>\n              \n  \n              <Grid container>\n                <Grid item xs>\n                  <Textboxinput label=\"Add Todos\" value={this.state.temptxt} onChangeEvent={this.onTextChanges} />\n                </Grid>\n                <Grid item>\n                  <Buttons color=\"primary\" title=\"Add\" clickEvent={this.onBtnClick}/>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid>\n                  <Cards list={this.state.lists} checkboxEvt={this.onCheckedChange} />\n                </Grid>\n              </Grid>\n              \n          </div>\n        </Container>\n \n            <TabPanel/>\n            \n      </>\n    );\n  \n  }\n}\n\n\nconst mapStateToProps = state => {\n  return { todos: state.todos };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      addtodoList: stat => dispatch(addtodoList(stat)),\n      \n  };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(Todos));"]},"metadata":{},"sourceType":"module"}