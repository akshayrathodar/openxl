{"ast":null,"code":"var _jsxFileName = \"/home/dell/Videos/Node_Backend/front/src/Elements/All.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { Cards } from '../Elements/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst All = props => {\n  _s();\n\n  console.log(props.todos);\n\n  const onCheckedChange = evt => {\n    let array = [...props.todos];\n    let index = array.findIndex(obj => obj.id === evt);\n    array[index].status = !array[index].status; //this.setState({lists:array});\n\n    console.log(array);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    forboth: {\n      margin: theme.spacing(1),\n      height: 55,\n      backgroundColor: props.colors\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      list: props.todos,\n      checkboxEvt: onCheckedChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(All, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = All;\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapStateToProps)(All);\n\nvar _c;\n\n$RefreshReg$(_c, \"All\");","map":{"version":3,"sources":["/home/dell/Videos/Node_Backend/front/src/Elements/All.js"],"names":["React","makeStyles","connect","Cards","All","props","console","log","todos","onCheckedChange","evt","array","index","findIndex","obj","id","status","useStyles","theme","forboth","margin","spacing","height","backgroundColor","colors","classes","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,KAAT,QAAsB,mBAAtB;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AAEA,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAC7B,QAAIC,KAAK,GAAG,CAAC,GAAGN,KAAK,CAACG,KAAV,CAAZ;AACA,QAAII,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,GAAlC,CAAZ;AACAC,IAAAA,KAAK,CAACC,KAAD,CAAL,CAAaI,MAAb,GAAsB,CAACL,KAAK,CAACC,KAAD,CAAL,CAAaI,MAApC,CAH6B,CAI7B;;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,GAND;;AAQA,QAAMM,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AAEvCC,IAAAA,OAAO,EAAC;AACNC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,eAAe,EAAElB,KAAK,CAACmB;AAHjB;AAF+B,GAAZ,CAAD,CAA5B;AASA,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEZ,KAAK,CAACG,KAAnB;AAA0B,MAAA,WAAW,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA5BD;;GAAML,G;;KAAAA,G;;AA8BN,MAAMsB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEnB,IAAAA,KAAK,EAAEmB,KAAK,CAACnB;AAAf,GAAP;AACH,CAFD;;AAKA,eAAeN,OAAO,CAACwB,eAAD,CAAP,CAAyBtB,GAAzB,CAAf","sourcesContent":["import React  from 'react';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\n\n\nimport { Cards } from '../Elements/Cards';\n\nconst All = (props) => {\n    console.log(props.todos);\n\n    const onCheckedChange = (evt) => {\n        let array = [...props.todos];\n        let index = array.findIndex(obj => obj.id === evt);\n        array[index].status = !array[index].status;\n        //this.setState({lists:array});\n        console.log(array);\n    }\n    \n    const useStyles = makeStyles((theme) => ({\n  \n      forboth:{\n        margin: theme.spacing(1),\n        height: 55,\n        backgroundColor: props.colors,\n      }\n    }));\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <h1>All </h1>\n            <Cards list={props.todos} checkboxEvt={onCheckedChange} />\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return { todos: state.todos };\n};\n  \n\nexport default connect(mapStateToProps)(All);"]},"metadata":{},"sourceType":"module"}